// In your README, you said you were applying for the heuristic bonus again for this assignment.  However, it clearly says on the assignment page that you can't apply for the same bonus category in both phases.  Sorry. :(  

// You're welcome to apply for the other bonuses for the resubmission though.  I obviously didn't take off points for any of this other stuff, but you're welcome to read through it if you want to have more ideas for the tournament or just want to hear some ways you could improve your coding in general.  

In your quicksort algorithm, you call the hist->getValue() function a lot for most entries in your array, and that can eat up a lot of time depending on how effective your hash function is/how big your history table is.  
I'm sure there's a more efficient way to sort them (maybe store the values after a single call to hist->getValue() ).  

// Your Board::quiescent() function is pretty sparse, but at least it shows that you get the idea.  Perhaps other things to take into consideration would be if a lot of pieces are under attack (especially queens or rooks).  In the middle of a chess game, most of the action takes place away from the kings.  Right now, your function is exploring only 1 depth throughout most of the game.  If you watch any of your games, it will become apparent that this makes your AI play terribly.  

// Generally, your default depth should be pretty high if you identify lots of states as quiescent (as you do), and lower if quiescent states are relatively rare.  

In any case, this is all just a matter of your parameter settings.  The algorithm itself seems to be solid.


